/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/SRW Core/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/SRW Core/PluginCommands.js":
/*!***************************************!*\
  !*** ./js/SRW Core/PluginCommands.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\t/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n\t\tpatches: patches,\r\n\t}); \r\n\t\r\n\tfunction patches(){};\r\n\t\r\n\tpatches.apply = function(){\r\n\t\tvar _Game_Interpreter_pluginCommand =\r\n            Game_Interpreter.prototype.pluginCommand;\r\n\t\tGame_Interpreter.prototype.pluginCommand = function(command, args) {\r\n\t\t\t_Game_Interpreter_pluginCommand.call(this, command, args);\r\n\t\t\t\r\n\t\t\tif (command === 'SRPGBattle') {\r\n\t\t\t\tswitch (args[0]) {\r\n\t\t\t\tcase 'Start':\r\n\t\t\t\t\t$gameSystem.startSRPG();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'End':\r\n\t\t\t\t\t$gameSystem.endSRPG();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (command === 'Intermission') {\r\n\t\t\t\tswitch (args[0]) {\r\n\t\t\t\tcase 'Start':\r\n\t\t\t\t\t$gameSystem.startIntermission();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'End':\r\n\t\t\t\t\t$gameSystem.endIntermission();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (command === 'UnlockUnit') {\r\n\t\t\t\t$SRWSaveManager.setUnitUnlocked(args[0]);\r\n\t\t\t}\r\n\t\t\tif (command === 'unlockUnit') {\r\n\t\t\t\t$SRWSaveManager.setUnitUnlocked(args[0]);\r\n\t\t\t}\r\n\t\t\tif (command === 'lockUnit') {\r\n\t\t\t\t$SRWSaveManager.setUnitLocked(args[0]);\r\n\t\t\t}\r\n\t\t\tif (command === 'SetLevel') {\r\n\t\t\t\t$SRWSaveManager.setPilotLevel(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\tif (command === 'setLevel') {\r\n\t\t\t\t$SRWSaveManager.setPilotLevel(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\tif (command === 'addKills') {\r\n\t\t\t\t$SRWSaveManager.addKills(args[0], args[1]);\r\n\t\t\t}\t\t\r\n\t\t\tif (command === 'addPP') {\r\n\t\t\t\t$SRWSaveManager.addPP(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\tif (command === 'addExp') {\r\n\t\t\t\t$SRWSaveManager.addExp(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\tif (command === 'setStageSong') {\r\n\t\t\t\t$gameSystem.currentStageSong  = args[0];\r\n\t\t\t}\t\r\n\t\t\tif (command === 'setSpecialTheme') {\r\n\t\t\t\t$songManager.setSpecialTheme(args[0]);\r\n\t\t\t}\t\r\n\t\t\tif (command === 'clearSpecialTheme') {\r\n\t\t\t\t$songManager.clearSpecialTheme();\r\n\t\t\t}\t\t\t\r\n\t\t\tif (command === 'addItem') {\r\n\t\t\t\t$inventoryManager.addItem(args[0]);\r\n\t\t\t}\t\r\n\t\t\tif (command === 'addAllItems') {            \r\n\t\t\t\tfor(var i = 0; i < $itemEffectManager.getDefinitionCount(); i++){\r\n\t\t\t\t\t$inventoryManager.addItem(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (command === 'removeItem') {\r\n\t\t\t\t$inventoryManager.removeItem(args[0]);\r\n\t\t\t}\t\r\n\t\t\tif (command === 'addItemToHolder') {\r\n\t\t\t\t$inventoryManager.addItemHolder(args[0], args[1], args[2]);\r\n\t\t\t}\r\n\t\t\tif (command === 'removeItemFromHolder') {\r\n\t\t\t\t$inventoryManager.removeItemHolder(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\tif (command === 'focusActor') {\r\n\t\t\t\tvar actorId = args[0];\r\n\t\t\t\tvar parts = actorId.match(/\\<(.*)\\>/);\t\r\n\t\t\t\tif(parts && parts.length > 1){\r\n\t\t\t\t\tactorId = $gameVariables.value(parts[1]);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar event = $statCalc.getReferenceEvent($gameActors.actor(actorId));\r\n\t\t\t\tif(event && !event.isErased()){\r\n\t\t\t\t\t$gamePlayer.locate(event.posX(), event.posY());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (command === 'focusEvent') {\r\n\t\t\t\tvar event = $gameMap.event(args[0]);\r\n\t\t\t\tif(event && !event.isErased()){\r\n\t\t\t\t\t$gamePlayer.locate(event.posX(), event.posY());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'clearDeployInfo') {\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tdeployInfo.count = 0;\r\n\t\t\t\tdeployInfo.assigned = {};\r\n\t\t\t\tdeployInfo.assignedSub = {};\r\n\t\t\t\tdeployInfo.assignedShips = {};\r\n\t\t\t\tdeployInfo.lockedSlots = {};\r\n\t\t\t\tdeployInfo.lockedShipSlots = {};\r\n\t\t\t\t$gameSystem.setDeployInfo(deployInfo);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'populateDeployList') {\r\n\t\t\t\t$gameSystem.constructDeployList();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setDeployCount') {\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tdeployInfo.count = args[0];\r\n\t\t\t\t$gameSystem.setDeployInfo(deployInfo);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setShipDeployCount') {\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tdeployInfo.shipCount = args[0];\r\n\t\t\t\t$gameSystem.setDeployInfo(deployInfo);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'assignSlot') {\r\n\t\t\t\t//args[0]: slot \r\n\t\t\t\t//args[1]: actor id\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tvar actorId = args[1];\r\n\t\t\t\tvar parts = actorId.match(/\\<(.*)\\>/);\t\r\n\t\t\t\tif(parts && parts.length > 1){\r\n\t\t\t\t\tactorId = $gameVariables.value(parts[1]);\r\n\t\t\t\t}\r\n\t\t\t\tdeployInfo.assigned[args[0]] = actorId;\r\n\t\t\t\t$gameSystem.setDeployInfo(deployInfo);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'assignSlotSub') {\r\n\t\t\t\t//args[0]: slot \r\n\t\t\t\t//args[1]: actor id\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tvar actorId = args[1];\r\n\t\t\t\tvar parts = actorId.match(/\\<(.*)\\>/);\t\r\n\t\t\t\tif(parts && parts.length > 1){\r\n\t\t\t\t\tactorId = $gameVariables.value(parts[1]);\r\n\t\t\t\t}\r\n\t\t\t\tdeployInfo.assignedSub[args[0]] = actorId;\r\n\t\t\t\t$gameSystem.setDeployInfo(deployInfo);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'assignShipSlot') {\r\n\t\t\t\t//args[0]: slot \r\n\t\t\t\t//args[1]: actor id\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tdeployInfo.assignedShips[args[0]] = args[1];\r\n\t\t\t\t$gameSystem.setDeployInfo(deployInfo);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'lockDeploySlot') {\r\n\t\t\t\t//prevents a slot from being changed by the player in the menu, assignSlot can still override\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tdeployInfo.lockedSlots[args[0]] = true;\r\n\t\t\t\t$gameSystem.setDeployInfo(deployInfo);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'unlockDeploySlot') {\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tdeployInfo.lockedSlots[args[0]] = false;\r\n\t\t\t\t$gameSystem.setDeployInfo(deployInfo);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'lockShipDeploySlot') {\r\n\t\t\t\t//prevents a slot from being changed by the player in the menu, assignSlot can still override\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tdeployInfo.lockedShipSlots[args[0]] = true;\r\n\t\t\t\t$gameSystem.setDeployInfo(deployInfo);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'unlockShipDeploySlot') {\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tdeployInfo.lockedShipSlots[args[0]] = false;\r\n\t\t\t\t$gameSystem.setDeployInfo(deployInfo);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSRWBattleBg') {\r\n\t\t\t\t$gameSystem.battleBg = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSRWBattleParallax1') {\r\n\t\t\t\t$gameSystem.battleParallax1 = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSRWBattleParallax2') {\r\n\t\t\t\t$gameSystem.battleParallax2 = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSRWBattleParallax3') {\r\n\t\t\t\t$gameSystem.battleParallax3 = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSRWBattleParallax3') {\r\n\t\t\t\t$gameSystem.battleParallax3 = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSRWBattleFloor') {\r\n\t\t\t\t$gameSystem.battleFloor = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSRWBattleSkybox') {\r\n\t\t\t\t$gameSystem.battleSkyBox = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSRWSkyBattleBg') {\r\n\t\t\t\t$gameSystem.skyBattleBg = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSRWSkyBattleParallax1') {\r\n\t\t\t\t$gameSystem.skyBattleParallax1 = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSRWDefaultBattleEnv') {\r\n\t\t\t\t$gameSystem.defaultBattleEnv = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setDefaultBattleEnv') {\r\n\t\t\t\t$gameSystem.defaultBattleEnv = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSkyBattleEnv') {\r\n\t\t\t\t$gameSystem.skyBattleEnv = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setRegionBattleEnv') {\r\n\t\t\t\t$gameSystem.regionBattleEnv[args[0]] = args[1];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setRegionSkyBattleEnv') {\r\n\t\t\t\t$gameSystem.regionSkyBattleEnv[args[0]] = args[1];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'resetRegionAttributes') {\t\t\t\r\n\t\t\t\tif(!$gameSystem.regionAttributes){\r\n\t\t\t\t\t$gameSystem.regionAttributes = {};\r\n\t\t\t\t}\t\r\n\t\t\t\tdelete $gameSystem.regionAttributes[args[0] * 1];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'addRegionAttributes') {\r\n\t\t\t\tif(!$gameSystem.regionAttributes){\r\n\t\t\t\t\t$gameSystem.regionAttributes = {};\r\n\t\t\t\t}\r\n\t\t\t\t$gameSystem.regionAttributes[args[0] * 1] = {\r\n\t\t\t\t\tdefense: args[1] * 1,\r\n\t\t\t\t\tevasion: args[2] * 1,\r\n\t\t\t\t\thp_regen: args[3] * 1, \r\n\t\t\t\t\ten_regen: args[4] * 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'addMapHighlight') {\r\n\t\t\t\tif(!$gameSystem.highlightedTiles){\r\n\t\t\t\t\t$gameSystem.highlightedTiles = [];\r\n\t\t\t\t}\r\n\t\t\t\t$gameSystem.highlightedTiles.push({x: args[0], y: args[1], color: args[2] || \"white\"});\r\n\t\t\t\t$gameSystem.highlightsRefreshed = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'removeMapHighlight') {\r\n\t\t\t\tif($gameSystem.highlightedTiles){\r\n\t\t\t\t\tvar x = args[0];\r\n\t\t\t\t\tvar y = args[1];\r\n\t\t\t\t\tvar tmp = [];\r\n\t\t\t\t\tfor(var i = 0; i < $gameSystem.highlightedTiles.length; i++){\r\n\t\t\t\t\t\tif($gameSystem.highlightedTiles[i].x != x || $gameSystem.highlightedTiles[i].y != y){\r\n\t\t\t\t\t\t\ttmp.push($gameSystem.highlightedTiles);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$gameSystem.highlightedTiles = tmp;\r\n\t\t\t\t}\r\n\t\t\t\t$gameSystem.highlightsRefreshed = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'addMapRegionHighlight') {\r\n\t\t\t\tif(!$gameSystem.regionHighlights){\r\n\t\t\t\t\t$gameSystem.regionHighlights = {};\r\n\t\t\t\t}\r\n\t\t\t\t$gameSystem.regionHighlights[args[0]] = args[1] || \"white\";\r\n\t\t\t\t$gameSystem.highlightsRefreshed = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'removeMapRegionHighlight') {\r\n\t\t\t\tdelete $gameSystem.regionHighlights[args[0]];\r\n\t\t\t\t$gameSystem.highlightsRefreshed = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setEnemyUpgradeLevel') {\r\n\t\t\t\t$gameSystem.enemyUpgradeLevel = args[0];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setMechUpgradeLevel') {\r\n\t\t\t\tvar mechId = args[0]*1;\r\n\t\t\t\tvar targetLevel = args[1]*1;\r\n\t\t\t\tvar force = args[2]*1;\r\n\t\t\t\tvar mechData = $statCalc.getMechData($dataClasses[mechId], true);\r\n\t\t\t\tif(mechData && mechData.id != -1){\r\n\t\t\t\t\tvar upgradeLevels = mechData.stats.upgradeLevels;\r\n\t\t\t\t\tvar targetUpgrades = [\"maxHP\",\"maxEN\",\"armor\",\"mobility\",\"accuracy\",\"weapons\"];\r\n\t\t\t\t\ttargetUpgrades.forEach(function(upgrade){\r\n\t\t\t\t\t\tif(upgradeLevels[upgrade] < targetLevel || force){\r\n\t\t\t\t\t\t\tupgradeLevels[upgrade] = targetLevel;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t$statCalc.storeMechData(mechData);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setPilotRelationship') {\r\n\t\t\t\tvar actorId = parseInt(args[0]);\r\n\t\t\t\tvar otherActorId = parseInt(args[1]);\r\n\t\t\t\tvar effectId = parseInt(args[2]);\r\n\t\t\t\tvar level = parseInt( args[3]);\r\n\t\t\t\t\r\n\t\t\t\tvar actor = $gameActors.actor(actorId);\r\n\t\t\t\tif(!actor.SRWStats.pilot.relationships){\r\n\t\t\t\t\tactor.SRWStats.pilot.relationships = {};\r\n\t\t\t\t}\r\n\t\t\t\tactor.SRWStats.pilot.relationships[otherActorId] = {\r\n\t\t\t\t\tactor: otherActorId,\r\n\t\t\t\t\teffectId: effectId,\r\n\t\t\t\t\tlevel: level\r\n\t\t\t\t};\r\n\t\t\t\t$statCalc.storeActorData(actor);\t\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t\tif (command === 'addPersuadeOption') {\r\n\t\t\t\t//args[0] = actorId\r\n\t\t\t\t//args[1] = eventId\r\n\t\t\t\t//args[2] = varId\r\n\t\t\t\tif(!$gameSystem.persuadeOptions[args[0]]){\r\n\t\t\t\t\t$gameSystem.persuadeOptions[args[0]] = {};\r\n\t\t\t\t}\r\n\t\t\t\t$gameSystem.persuadeOptions[args[0]][args[1]] = args[2];\r\n\t\t\t}\t\r\n\r\n\t\t\tif (command === 'removePersuadeOption') {\r\n\t\t\t\t//args[0] = actorId\r\n\t\t\t\t//args[1] = eventId\r\n\t\t\t\tif($gameSystem.persuadeOptions[args[0]]){\r\n\t\t\t\t\tdelete $gameSystem.persuadeOptions[args[0]][args[1]];\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\tif (command === 'deployShips') {\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tvar deployList = $gameSystem.getShipDeployList();\t\t\t\r\n\t\t\t\tvar activeDeployList = [];\r\n\t\t\t\tfor(var i = 0; i < deployInfo.shipCount; i++){\r\n\t\t\t\t\tactiveDeployList.push(deployList[i]);\r\n\t\t\t\t}\r\n\t\t\t\t$gameSystem.setActiveShipDeployList(activeDeployList);\r\n\t\t\t\t$gameSystem.deployShips(args[0]);\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'deployAll') {\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tvar deployList = $gameSystem.getDeployList();\r\n\t\t\t\tvar activeDeployList = [];\r\n\t\t\t\tfor(var i = 0; i < deployInfo.count; i++){\r\n\t\t\t\t\tactiveDeployList.push(deployList[i]);\r\n\t\t\t\t}\r\n\t\t\t\t$gameSystem.setActiveDeployList(activeDeployList);\r\n\t\t\t\t$gameSystem.deployActors(args[0], \"all\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'deployAllLocked') {\r\n\t\t\t\t$gameSystem.deployActors(args[0], \"locked\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'deployAllUnLocked') {\r\n\t\t\t\t$gameSystem.deployActors(args[0], \"unlocked\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'deployActor') {\r\n\t\t\t\tvar actor_unit = $gameActors.actor(args[0]);\r\n\t\t\t\tvar event = $gameMap.event(args[1]);\r\n\t\t\t\tif(actor_unit && event){\r\n\t\t\t\t\tvar type;\r\n\t\t\t\t\tif(event.event().meta.type){\r\n\t\t\t\t\t\ttype = event.event().meta.type;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttype = \"actor\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.setType(type);\r\n\t\t\t\t\t$gameSystem.deployActor(actor_unit, event, args[2] * 1, args[3]);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'deploySlot') {\r\n\t\t\t\tvar slot = args[0];\r\n\t\t\t\tvar deployInfo = $gameSystem.getDeployInfo();\r\n\t\t\t\tvar actor_id = deployInfo.assigned[slot];\r\n\t\t\t\tvar actor_unit = $gameActors.actor(actor_id);\r\n\t\t\t\tvar eventId = -1;\r\n\t\t\t\tvar ctr = 0;\r\n\t\t\t\tvar actorEventCtr = 0;\r\n\t\t\t\tvar events = $gameMap.events();\r\n\t\t\t\twhile(eventId == -1 && ctr < events.length){\r\n\t\t\t\t\tvar event = events[ctr];\r\n\t\t\t\t\tif (event.isType() === 'actor'){\r\n\t\t\t\t\t\tif(actorEventCtr == slot){\r\n\t\t\t\t\t\t\teventId = event.eventId();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tactorEventCtr++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tctr++;\r\n\t\t\t\t}\r\n\t\t\t\tif(actor_unit && eventId != -1){\r\n\t\t\t\t\t$gameSystem.deployActor(actor_unit, $gameMap.event(eventId), args[1], deployInfo.assignedSub[slot]);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'redeployActor') {\r\n\t\t\t\t$gameSystem.redeployActor(args[0], args[1] * 1);\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'moveEventToPoint') {\r\n\t\t\t\t$gameMap._interpreter.setWaitMode(\"move_to_point\");\r\n\t\t\t\t$gameSystem.setSrpgWaitMoving(true);\r\n\t\t\t\tvar event = $gameMap.event(args[0]);\r\n\t\t\t\tif(event){\r\n\t\t\t\t\tvar position = $statCalc.getAdjacentFreeSpace({x: args[1], y: args[2]}, null, null, {x: event.posX(), y: event.posY()});\r\n\t\t\t\t\tevent.srpgMoveToPoint(position, true, true);\r\n\t\t\t\t\tif(args[3] * 1){\r\n\t\t\t\t\t\t$gamePlayer.locate(event.posX(), event.posY());\r\n\t\t\t\t\t\t$gameTemp.followMove = true;\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'moveActorToPoint') {\r\n\t\t\t\t$gameMap._interpreter.setWaitMode(\"move_to_point\");\r\n\t\t\t\t$gameSystem.setSrpgWaitMoving(true);\r\n\t\t\t\tvar event = $statCalc.getReferenceEvent($gameActors.actor(args[0]));\r\n\t\t\t\tif(event){\r\n\t\t\t\t\tvar position = $statCalc.getAdjacentFreeSpace({x: args[1], y: args[2]}, null, null, {x: event.posX(), y: event.posY()});\r\n\t\t\t\t\tevent.srpgMoveToPoint(position, true, true);\r\n\t\t\t\t\tif(args[3] * 1){\r\n\t\t\t\t\t\t$gamePlayer.locate(event.posX(), event.posY());\r\n\t\t\t\t\t\t$gameTemp.followMove = true;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'moveEventToEvent') {\r\n\t\t\t\t$gameMap._interpreter.setWaitMode(\"move_to_point\");\r\n\t\t\t\t$gameSystem.setSrpgWaitMoving(true);\r\n\t\t\t\tvar targetEvent = $gameMap.event(args[1]);\r\n\t\t\t\tvar event = $gameMap.event(args[0]);\r\n\t\t\t\tif(event && targetEvent){\r\n\t\t\t\t\tvar position = $statCalc.getAdjacentFreeSpace({x: targetEvent.posX(), y: targetEvent.posY()}, null, null, {x: event.posX(), y: event.posY()});\r\n\t\t\t\t\tevent.srpgMoveToPoint(position, true, true);\r\n\t\t\t\t\tif(args[2] * 1){\r\n\t\t\t\t\t\t$gamePlayer.locate(event.posX(), event.posY());\r\n\t\t\t\t\t\t$gameTemp.followMove = true;\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'moveActorToEvent') {\r\n\t\t\t\t$gameMap._interpreter.setWaitMode(\"move_to_point\");\r\n\t\t\t\t$gameSystem.setSrpgWaitMoving(true);\r\n\t\t\t\tvar targetEvent = $gameMap.event(args[1]);\r\n\t\t\t\tvar event = $statCalc.getReferenceEvent($gameActors.actor(args[0]));\r\n\t\t\t\tif(event && targetEvent){\r\n\t\t\t\t\tvar position = $statCalc.getAdjacentFreeSpace({x: targetEvent.posX(), y: targetEvent.posY()}, null, null, {x: event.posX(), y: event.posY()});\r\n\t\t\t\t\tevent.srpgMoveToPoint(position, true, true);\r\n\t\t\t\t\tif(args[2] * 1){\r\n\t\t\t\t\t\t$gamePlayer.locate(event.posX(), event.posY());\r\n\t\t\t\t\t\t$gameTemp.followMove = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'moveEventToActor') {\r\n\t\t\t\t$gameMap._interpreter.setWaitMode(\"move_to_point\");\r\n\t\t\t\t$gameSystem.setSrpgWaitMoving(true);\r\n\t\t\t\tvar targetEvent = $statCalc.getReferenceEvent($gameActors.actor(args[1]));\r\n\t\t\t\tvar event = $gameMap.event(args[0]);\r\n\t\t\t\tif(event && targetEvent){\r\n\t\t\t\t\tvar position = $statCalc.getAdjacentFreeSpace({x: targetEvent.posX(), y: targetEvent.posY()}, null, null, {x: event.posX(), y: event.posY()});\r\n\t\t\t\t\tevent.srpgMoveToPoint(position, true, true);\r\n\t\t\t\t\tif(args[2] * 1){\r\n\t\t\t\t\t\t$gamePlayer.locate(event.posX(), event.posY());\r\n\t\t\t\t\t\t$gameTemp.followMove = true;\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'moveActorToActor') {\r\n\t\t\t\t$gameMap._interpreter.setWaitMode(\"move_to_point\");\r\n\t\t\t\t$gameSystem.setSrpgWaitMoving(true);\r\n\t\t\t\tvar targetEvent = $statCalc.getReferenceEvent($gameActors.actor(args[1]));\r\n\t\t\t\tvar event = $statCalc.getReferenceEvent($gameActors.actor(args[0]));\r\n\t\t\t\tif(event && targetEvent){\r\n\t\t\t\t\tvar position = $statCalc.getAdjacentFreeSpace({x: targetEvent.posX(), y: targetEvent.posY()}, null, null, {x: event.posX(), y: event.posY()});\r\n\t\t\t\t\tevent.srpgMoveToPoint(position, true, true);\r\n\t\t\t\t\tif(args[2] * 1){\r\n\t\t\t\t\t\t$gamePlayer.locate(event.posX(), event.posY());\r\n\t\t\t\t\t\t$gameTemp.followMove = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setEventFlying') {\r\n\t\t\t\tvar actor = $gameSystem.EventToUnit(args[0])[1];\r\n\t\t\t\tif($statCalc.canFly(actor)){\r\n\t\t\t\t\t$statCalc.setFlying(actor, true);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setEventLanded') {\r\n\t\t\t\tvar actor = $gameSystem.EventToUnit(args[0])[1];\t\t\r\n\t\t\t\t$statCalc.setFlying(actor, false);\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'enableFaction') {\r\n\t\t\t\t$gameSystem.enableFaction(args[0]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'disableFaction') {\r\n\t\t\t\t$gameSystem.disableFaction(args[0]);\r\n\t\t\t}\t\t\t\r\n\t\t\t\r\n\t\t\tif (command === 'setFactionAggro') {\r\n\t\t\t\t$gameSystem.setFactionAggro(args[0], JSON.parse(args[1]));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'clearFactionAggro') {\r\n\t\t\t\t$gameSystem.clearFactionAggro(args[0]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'transformEvent') {\r\n\t\t\t\tvar actor = $gameSystem.EventToUnit(args[0])[1];\r\n\t\t\t\t/*if(actor.isSubTwin){\r\n\t\t\t\t\tvar main = $statCalc.getMainTwin(actor);\r\n\t\t\t\t\t$statCalc.swap(main, true);\r\n\t\t\t\t}*/\r\n\t\t\t\t$statCalc.transform(actor, args[1], true);\r\n\t\t\t\tvar se = {};\r\n\t\t\t\tse.name = 'SRWTransform';\r\n\t\t\t\tse.pan = 0;\r\n\t\t\t\tse.pitch = 100;\r\n\t\t\t\tse.volume = 80;\r\n\t\t\t\tAudioManager.playSe(se);\r\n\t\t\t}\t\r\n\r\n\t\t\tif (command === 'combineEvent') {\r\n\t\t\t\tvar actor = $gameSystem.EventToUnit(args[0])[1];\r\n\t\t\t\t$statCalc.combine(actor, true);\r\n\t\t\t\tvar se = {};\r\n\t\t\t\tse.name = 'SRWTransform';\r\n\t\t\t\tse.pan = 0;\r\n\t\t\t\tse.pitch = 100;\r\n\t\t\t\tse.volume = 80;\r\n\t\t\t\tAudioManager.playSe(se);\r\n\t\t\t}\t\r\n\r\n\t\t\tif (command === 'splitEvent') {\r\n\t\t\t\tvar actor = $gameSystem.EventToUnit(args[0])[1];\r\n\t\t\t\t$statCalc.split(actor, true);\r\n\t\t\t\tvar se = {};\r\n\t\t\t\tse.name = 'SRWTransform';\r\n\t\t\t\tse.pan = 0;\r\n\t\t\t\tse.pitch = 100;\r\n\t\t\t\tse.volume = 80;\r\n\t\t\t\tAudioManager.playSe(se);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'transformActor') {\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\t/*if(actor.isSubTwin){\r\n\t\t\t\t\tvar main = $statCalc.getMainTwin(actor);\r\n\t\t\t\t\t$statCalc.swap(main, true);\r\n\t\t\t\t}*/\r\n\t\t\t\t$statCalc.transform(actor, args[1], true, args[2]);\r\n\t\t\t\tvar se = {};\r\n\t\t\t\tse.name = 'SRWTransform';\r\n\t\t\t\tse.pan = 0;\r\n\t\t\t\tse.pitch = 100;\r\n\t\t\t\tse.volume = 80;\r\n\t\t\t\tAudioManager.playSe(se);\r\n\t\t\t}\r\n\r\n\t\t\tif (command === 'transformActorDirect') {\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\t/*if(actor.isSubTwin){\r\n\t\t\t\t\tvar main = $statCalc.getMainTwin(actor);\r\n\t\t\t\t\t$statCalc.swap(main, true);\r\n\t\t\t\t}*/\r\n\t\t\t\t$statCalc.transform(actor, 0, true, args[1]);\r\n\t\t\t\tvar se = {};\r\n\t\t\t\tse.name = 'SRWTransform';\r\n\t\t\t\tse.pan = 0;\r\n\t\t\t\tse.pitch = 100;\r\n\t\t\t\tse.volume = 80;\r\n\t\t\t\tAudioManager.playSe(se);\r\n\t\t\t}\r\n\r\n\t\t\tif (command === 'combineActor') {\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\t$statCalc.combine(actor, true);\r\n\t\t\t\tvar se = {};\r\n\t\t\t\tse.name = 'SRWTransform';\r\n\t\t\t\tse.pan = 0;\r\n\t\t\t\tse.pitch = 100;\r\n\t\t\t\tse.volume = 80;\r\n\t\t\t\tAudioManager.playSe(se);\r\n\t\t\t}\t\r\n\r\n\t\t\tif (command === 'splitActor') {\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\t$statCalc.split(actor, true);\r\n\t\t\t\tvar se = {};\r\n\t\t\t\tse.name = 'SRWTransform';\r\n\t\t\t\tse.pan = 0;\r\n\t\t\t\tse.pitch = 100;\r\n\t\t\t\tse.volume = 80;\r\n\t\t\t\tAudioManager.playSe(se);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'separateActor') {\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\tif(actor.isSubTwin){\r\n\t\t\t\t\tactor = $statCalc.getMainTwin(actor);\r\n\t\t\t\t}\r\n\t\t\t\tif(actor.subTwin || actor.isSubTwin){\r\n\t\t\t\t\t$statCalc.separate(actor, true);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'makeActorMainTwin') {\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\tif(actor.isSubTwin){\r\n\t\t\t\t\tactor = $statCalc.getMainTwin(actor);\r\n\t\t\t\t\t$statCalc.swap(actor, true);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'preventActorDeathQuote') {\r\n\t\t\t\tif(!$gameTemp.preventedDeathQuotes){\r\n\t\t\t\t\t$gameTemp.preventedDeathQuotes = {};\r\n\t\t\t\t}\r\n\t\t\t\t$gameTemp.preventedDeathQuotes[args[0]] = true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setSaveDisplayName') {\t\t\t\r\n\t\t\t\t$gameSystem.saveDisplayName = (args[0] || \"\").replace(/\\_/ig, \" \");\r\n\t\t\t}\t\r\n\r\n\t\t\tif (command === 'setStageTextId') {\t\t\t\r\n\t\t\t\t$gameSystem.stageTextId = args[0];\r\n\t\t\t}\t\t\t\t\r\n\t\t\t\r\n\t\t\tif (command === 'setEventWill') {\t\r\n\t\t\t\tvar actor = $gameSystem.EventToUnit(args[0])[1];\r\n\t\t\t\t$statCalc.setWill(actor, args[1] * 1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setActorWill') {\t\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\t$statCalc.setWill(actor, args[1] * 1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'makeActorAI') {\t\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\t$statCalc.setIsAI(actor, true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'makeActorControllable') {\t\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\t$statCalc.setIsAI(actor, false);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setActorEssential') {\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\t$statCalc.setEssential(actor, true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setActorNonEssential') {\r\n\t\t\t\tvar actor = $gameActors.actor(args[0]);\r\n\t\t\t\t$statCalc.setEssential(actor, false);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'unlockMechWeapon') {\t\t\t\r\n\t\t\t\t$statCalc.setWeaponUnlocked(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'lockMechWeapon') {\r\n\t\t\t\t$statCalc.setWeaponLocked(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setUnlockedUpgradeLevel') {\r\n\t\t\t\tvar tmp = parseInt(args[0]);\r\n\t\t\t\tif(!isNaN(tmp)){\r\n\t\t\t\t\t$gameSystem.unlockedUpgradeLevel = tmp;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setRequiredFUBLevel') {\r\n\t\t\t\tvar tmp = parseInt(args[0]);\r\n\t\t\t\tif(!isNaN(tmp)){\r\n\t\t\t\t\t$gameSystem.requiredFUBLevel = tmp;\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setEventCounterAction') {\t\r\n\t\t\t\tvar actor = $gameSystem.EventToUnit(args[0])[1];\r\n\t\t\t\tactor.counterBehavior = args[1];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setEventAttackAction') {\t\r\n\t\t\t\tvar actor = $gameSystem.EventToUnit(args[0])[1];\r\n\t\t\t\tactor.attackBehavior = args[1];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setEventBattleMode') {\t\r\n\t\t\t\tvar battlerArray = $gameSystem.EventToUnit(args[0]);\r\n\t\t\t\tif (battlerArray && (battlerArray[0] === 'actor' || battlerArray[0] === 'enemy')) {\r\n\t\t\t\t\tbattlerArray[1].setBattleMode(args[1], true);\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tif(battlerArray[0] === 'enemy'){\r\n\t\t\t\t\tif(battlerArray[1].squadId != -1){\r\n\t\t\t\t\t\tthis.setSquadMode(squadId, args[1]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\treturn true;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tif (command === 'hidePilotAbility') {\t\r\n\t\t\t\t$gameSystem.setPilotAbilityStatus(args[0], args[1], \"hidden\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'lockPilotAbility') {\t\r\n\t\t\t\t$gameSystem.setPilotAbilityStatus(args[0], args[1], \"locked\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'unlockPilotAbility') {\t\r\n\t\t\t\t$gameSystem.setPilotAbilityStatus(args[0], args[1], \"\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'hideMechAbility') {\t\r\n\t\t\t\t$gameSystem.setMechAbilityStatus(args[0], args[1], \"hidden\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'lockMechAbility') {\t\r\n\t\t\t\t$gameSystem.setMechAbilityStatus(args[0], args[1], \"locked\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'unlockMechAbility') {\t\r\n\t\t\t\t$gameSystem.setMechAbilityStatus(args[0], args[1], \"\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'lockTransformation') {\t\r\n\t\t\t\t$gameSystem.lockTransformation(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'lockAllTransformations') {\t\r\n\t\t\t\t$gameSystem.lockAllTransformations();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'unlockTransformation') {\t\r\n\t\t\t\t$gameSystem.unlockTransformation(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'unlockAllTransformations') {\t\r\n\t\t\t\t$gameSystem.unlockAllTransformations();\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setFaceAlias') {\t\r\n\t\t\t\tif(!$gameSystem.faceAliases){\r\n\t\t\t\t\t$gameSystem.faceAliases = {};\r\n\t\t\t\t}\r\n\t\t\t\t$gameSystem.faceAliases[args[0]] = args[1];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setCharacterIndexAlias') {\t\r\n\t\t\t\tif(!$gameSystem.characterIdexAliases){\r\n\t\t\t\t\t$gameSystem.characterIdexAliases = {};\r\n\t\t\t\t}\r\n\t\t\t\t$gameSystem.characterIdexAliases[args[0]] = args[1];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setPilotAbilityUpgrade') {\t\r\n\t\t\t\t$pilotAbilityManager.setUpgrade(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'setMechAbilityUpgrade') {\t\r\n\t\t\t\t$mechAbilityManager.setUpgrade(args[0], args[1]);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command == 'showTargetingReticule'){\t\t\t\r\n\t\t\t\tvar eventIdSource;\r\n\t\t\t\tvar parts = args[0].match(/\\actor\\:(.*)/);\t\r\n\t\t\t\tif(parts && parts.length > 1){\r\n\t\t\t\t\teventIdSource = $gameSystem.ActorToEvent(parts[1]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\teventIdSource = args[0];\r\n\t\t\t\t}\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tvar eventIdTarget;\r\n\t\t\t\tvar parts = args[1].match(/\\actor\\:(.*)/);\t\r\n\t\t\t\tif(parts && parts.length > 1){\r\n\t\t\t\t\teventIdTarget = $gameSystem.ActorToEvent(parts[1]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\teventIdTarget = args[1];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar actionArray = $gameSystem.EventToUnit(eventIdSource);\r\n\t\t\t\tvar targetArray = $gameSystem.EventToUnit(eventIdTarget);\r\n\t\t\t\tif(actionArray && targetArray){\r\n\t\t\t\t\t$gameTemp.reticuleInfo = {\r\n\t\t\t\t\t\tactor: actionArray[1],\r\n\t\t\t\t\t\ttargetActor: targetArray[1]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'clearTile') {\r\n\t\t\t\tvar position = {x: args[0], y: args[1]};\r\n\t\t\t\tvar actor = $statCalc.activeUnitAtPosition(position);\r\n\t\t\t\tif(actor){\r\n\t\t\t\t\tvar newPosition = $statCalc.getAdjacentFreeSpace(position);\r\n\t\t\t\t\tvar event = $statCalc.getReferenceEvent(actor);\r\n\t\t\t\t\tvar actorId = -1;\r\n\t\t\t\t\tif(actor.isActor()){\r\n\t\t\t\t\t\tactorId = actor.actorId();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(event.eventId() != args[2] && actorId != args[3]){\r\n\t\t\t\t\t\tevent.locate(newPosition.x, newPosition.y);\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfunction clearAdjacentToTile(position, includeDiagonal){\r\n\t\t\t\tvar positions  = [];\r\n\t\t\t\tpositions.push({position: {x: position.x - 1, y: position.y}, biasPosition:{x: position.x - 2, y: position.y}});\r\n\t\t\t\tpositions.push({position: {x: position.x + 1, y: position.y}, biasPosition:{x: position.x + 2, y: position.y}});\r\n\t\t\t\tpositions.push({position: {x: position.x, y: position.y + 1}, biasPosition:{x: position.x, y: position.y + 2}});\r\n\t\t\t\tpositions.push({position: {x: position.x, y: position.y - 1}, biasPosition:{x: position.x, y: position.y - 2}});\r\n\t\t\t\t\r\n\t\t\t\tif(includeDiagonal){\r\n\t\t\t\t\tpositions.push({position: {x: position.x - 1, y: position.y - 1}, biasPosition:{x: position.x - 2, y: position.y - 2}});\r\n\t\t\t\t\tpositions.push({position: {x: position.x + 1, y: position.y + 1}, biasPosition:{x: position.x + 2, y: position.y + 2}});\r\n\t\t\t\t\tpositions.push({position: {x: position.x - 1, y: position.y + 1}, biasPosition:{x: position.x - 2, y: position.y + 2}});\r\n\t\t\t\t\tpositions.push({position: {x: position.x + 1, y: position.y - 1}, biasPosition:{x: position.x + 2, y: position.y - 2}});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar usedPositions = {};\r\n\t\t\t\tpositions.forEach(function(currentInfo){\t\t\t\t\r\n\t\t\t\t\tvar actor = $statCalc.activeUnitAtPosition(currentInfo.position);\r\n\t\t\t\t\tif(actor){\r\n\t\t\t\t\t\tvar newPosition = $statCalc.getAdjacentFreeSpace(currentInfo.position, null, null, currentInfo.biasPosition, true, usedPositions);\r\n\t\t\t\t\t\tif(!usedPositions[newPosition.x]){\r\n\t\t\t\t\t\t\tusedPositions[newPosition.x] = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!usedPositions[newPosition.x][newPosition.y]){\r\n\t\t\t\t\t\t\tusedPositions[newPosition.x][newPosition.y] = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar event = $statCalc.getReferenceEvent(actor);\r\n\t\t\t\t\t\tvar actorId = -1;\t\t\t\t\t\r\n\t\t\t\t\t\tevent.locate(newPosition.x, newPosition.y);\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'clearAdjacentToTile') {\r\n\t\t\t\tclearAdjacentToTile({x: args[0] * 1, y: args[1] * 1}, args[2] * 1);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'clearAdjacentToEvent') {\r\n\t\t\t\tvar event = $gameMap.event(args[0]);\r\n\t\t\t\tif(event){\r\n\t\t\t\t\tclearAdjacentToTile({x: event.posX(), y:  event.posY()}, args[1] * 1);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (command === 'clearAdjacentToActor') {\r\n\t\t\t\tvar event = $statCalc.getReferenceEvent($gameActors.actor(args[0]));\r\n\t\t\t\tif(event){\r\n\t\t\t\t\tclearAdjacentToTile({x: event.posX(), y:  event.posY()}, args[1] * 1);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\tif (command === 'stopSkipping') {\r\n\t\t\t\t//exists purely to manually ensure A+Start skipping stops at the point the command is called.\r\n\t\t\t}\r\n\t\t};\t\r\n\t}\n\n//# sourceURL=webpack:///./js/SRW_Core/PluginCommands.js?");

/***/ }),

/***/ "./js/SRW Core/Windows.js":
/*!********************************!*\
  !*** ./js/SRW Core/Windows.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\t/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n\t\tpatches: patches,\r\n\t\tWindow_CounterCommand: Window_CounterCommand,\r\n\t\tWindow_SRWItemBattle: Window_SRWItemBattle,\r\n\t\tWindow_SRWAbilityCommand: Window_SRWAbilityCommand,\r\n\t\tWindow_SRWTransformSelection: Window_SRWTransformSelection,\r\n\t\tWindow_StageInfo: Window_StageInfo,\r\n\t\tWindow_ConditionsInfo: Window_ConditionsInfo,\r\n\t}); \r\n\t\r\n\tfunction patches(){};\r\n\t\r\n\tpatches.apply = function(){\r\n\t\tWindow_SavefileList.prototype.drawItem = function(index) {\r\n\t\t\tvar id = index + 1;\r\n\t\t\tvar valid = DataManager.isThisGameFile(id);\r\n\t\t\tvar info = DataManager.loadSavefileInfo(id);\r\n\t\t\tvar rect = this.itemRectForText(index);\r\n\t\t\tthis.resetTextColor();\r\n\t\t\tif (this._mode === 'load') {\r\n\t\t\t\tthis.changePaintOpacity(valid);\r\n\t\t\t}\r\n\t\t\tthis.drawFileId(id, rect.x, rect.y);\r\n\t\t\tif (info) {\r\n\t\t\t\tthis.changePaintOpacity(valid);\r\n\t\t\t\tthis.drawContents(info, rect, valid);\r\n\t\t\t\tthis.changePaintOpacity(true);\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tWindow_SavefileList.prototype.drawContents = function(info, rect, valid) {\r\n\t\t\tvar bottom = rect.y + rect.height;\r\n\t\t\tif (rect.width >= 420) {\r\n\t\t\t\tthis.drawGameTitle(info, rect.x + 192, rect.y, rect.width - 192);\r\n\t\t\t\tif (valid) {\r\n\t\t\t\t\tthis.drawPartyCharacters(info, rect.x + 220, bottom - 4);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar lineHeight = this.lineHeight();\r\n\t\t\tvar y2 = bottom - lineHeight;\r\n\t\t\tif (y2 >= lineHeight) {\r\n\t\t\t\tthis.drawPlaytime(info, rect.x, y2, rect.width);\r\n\t\t\t}\r\n\t\t\tvar offSetX = 20;\r\n\t\t\tvar bottomOffset = 54;\r\n\t\t\tif(info.funds != null){\r\n\t\t\t\tthis.drawText(APPSTRINGS.SAVEMENU.label_funds+\": \"+info.funds, offSetX + rect.x, bottom - bottomOffset, 240);\r\n\t\t\t}\r\n\t\t\tif(info.funds != null){\r\n\t\t\t\tthis.drawText(APPSTRINGS.SAVEMENU.label_SR_count+\": \"+info.SRCount, offSetX + rect.x + 240, bottom - bottomOffset, 240);\r\n\t\t\t}\r\n\t\t\tif(info.funds != null){\r\n\t\t\t\tthis.drawText(APPSTRINGS.SAVEMENU.label_turn_count+\": \"+info.turnCount, offSetX + rect.x + 480, bottom - bottomOffset, 240);\r\n\t\t\t}\t\t\r\n\t\t};\t\r\n\t\t\r\n\t\tWindow_Message.prototype.isInstantText = function() {\r\n\t\t\treturn Input.isPressed('ok') && Input.isPressed('pagedown');\r\n\t\t}\r\n\t\t\r\n\t\tWindow_Message.prototype.updateMessage = function() {\r\n\t\t\tif (this._textState) {\r\n\t\t\t\twhile (!this.isEndOfText(this._textState)) {\r\n\t\t\t\t\tif (this.needsNewPage(this._textState)) {\r\n\t\t\t\t\t\tthis.newPage(this._textState);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tthis.updateShowFast();\r\n\t\t\t\t\tthis.processCharacter(this._textState);\r\n\t\t\t\t\tif(!this.isInstantText()){\t\t\t\r\n\t\t\t\t\t\tif (!this._showFast && !this._lineShowFast) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (this.pause || this._waitCount > 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t\tif (this.isEndOfText(this._textState)) {\r\n\t\t\t\t\tthis.onEndOfText();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\tWindow_Message.prototype.updateInput = function() {\t\t\r\n\t\t\tif (this.isAnySubWindowActive()) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif (this.pause) {\r\n\t\t\t\tif (this.isTriggered() || this.isInstantText()) {\r\n\t\t\t\t\tInput.update();\r\n\t\t\t\t\tthis.pause = false;\r\n\t\t\t\t\tif (!this._textState) {\r\n\t\t\t\t\t\tthis.terminateMessage();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\t\r\n\t\tWindow_Message.prototype.startPause = function() {\r\n\t\t\tvar waitCount;\r\n\t\t\tif(this.isInstantText()){\r\n\t\t\t\twaitCount = 2;\r\n\t\t\t} else {\r\n\t\t\t\twaitCount = 10;\r\n\t\t\t}\r\n\t\t\tthis.startWait(waitCount);\r\n\t\t\tthis.pause = true;\r\n\t\t};\t\t\r\n\r\n\t//====================================================================\r\n\t// ●Window_ActorCommand\r\n\t//====================================================================\r\n\t\tWindow_Command.prototype.isList = function() {\r\n\t\t\tif (this._list) {\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar _SRPG_Window_ActorCommand_numVisibleRows = Window_ActorCommand.prototype.numVisibleRows;\r\n\t\tWindow_ActorCommand.prototype.numVisibleRows = function() {\r\n\t\t\tif ($gameSystem.isSRPGMode() == true) {\r\n\t\t\t\tif (this.isList()) {\r\n\t\t\t\t\treturn this.maxItems();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn _SRPG_Window_ActorCommand_numVisibleRows.call(this);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar _SRPG_Window_ActorCommand_makeCommandList = Window_ActorCommand.prototype.makeCommandList;\r\n\t\tWindow_ActorCommand.prototype.makeCommandList = function() {\r\n\t\t\tvar _this = this;\r\n\t\t\tif ($gameSystem.isSRPGMode() == true) {\r\n\t\t\t\tif (this._actor) {\r\n\t\t\t\t\t//TODO: turn different menus into subclasses\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar battler = $gameSystem.EventToUnit($gameTemp.activeEvent().eventId())[1];\r\n\t\t\t\t\tvar type = battler.isActor() ? \"enemy\" : \"actor\";\r\n\t\t\t\t\tvar pos = {\r\n\t\t\t\t\t\tx: $gameTemp.activeEvent().posX(),\r\n\t\t\t\t\t\ty: $gameTemp.activeEvent().posY()\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvar fullRange = $statCalc.getFullWeaponRange(battler, $gameTemp.isPostMove);\r\n\t\t\t\t\tvar hasTarget = $statCalc.getAllInRange($gameSystem.getPlayerFactionInfo(), pos, fullRange.range, fullRange.minRange).length > 0;\r\n\t\t\t\t\tvar hasMapWeapon = $statCalc.hasMapWeapon(battler);\r\n\t\t\t\t\t\r\n\t\t\t\t\tfunction boardingMenu(){\r\n\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.board, 'board');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfunction regularMenu(){\r\n\t\t\t\t\t\tif(_this._actor.battleMode() != \"fixed\"){\r\n\t\t\t\t\t\t\t_this.addMoveCommand();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(hasTarget || hasMapWeapon){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_attack, 'attack');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($statCalc.isShip(_this._actor) && $statCalc.hasBoardedUnits(_this._actor)){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.deploy, 'deploy');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_spirit, 'spirit');\r\n\t\t\t\t\t\tif($statCalc.applyStatModsToValue(_this._actor, 0, [\"heal\"])){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_repair, 'heal');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($statCalc.applyStatModsToValue(_this._actor, 0, [\"resupply\"])){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_resupply, 'resupply');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($statCalc.getConsumables(_this._actor).length){\r\n\t\t\t\t\t\t\t _this.addCommand(APPSTRINGS.MAPMENU.cmd_item, 'item');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($statCalc.getAbilityCommands(_this._actor).length){\r\n\t\t\t\t\t\t\t _this.addCommand(APPSTRINGS.MAPMENU.cmd_ability, 'ability');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($statCalc.canFly(_this._actor) && $statCalc.getCurrentTerrain(_this._actor) != \"space\"){\r\n\t\t\t\t\t\t\tif($statCalc.isFlying(_this._actor)){\r\n\t\t\t\t\t\t\t\tif(($statCalc.getTileType(_this._actor) == \"land\" && $statCalc.canBeOnLand(_this._actor)) || ($statCalc.getTileType(_this._actor) == \"water\" && $statCalc.canBeOnWater(_this._actor))){\r\n\t\t\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_land, 'land');\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_fly, 'fly');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\t\t\r\n\t\t\t\t\t\tif($gameSystem.getPersuadeOption(_this._actor)){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_persuade, 'persuade');\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\tif($statCalc.canCombine(_this._actor).isValid){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_combine, 'combine');\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\tif($statCalc.isCombined(_this._actor)){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_split, 'split');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(ENGINE_SETTINGS.ENABLE_TWIN_SYSTEM && !ENGINE_SETTINGS.DISABLE_ALLY_TWINS){\r\n\t\t\t\t\t\t\tif(!$statCalc.isShip(_this._actor) && $statCalc.canSwap(_this._actor)){\r\n\t\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_swap, 'swap');\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\tif(!$statCalc.isShip(_this._actor) && $statCalc.isMainTwin(_this._actor)){\r\n\t\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_separate, 'separate');\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\tif(!$statCalc.isShip(_this._actor) && $statCalc.canTwin(_this._actor)){\r\n\t\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_join, 'join');\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif($statCalc.canTransform(_this._actor)){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_transform, 'transform');\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t_this.addWaitCommand();\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfunction hitAndAwayMenu(){\r\n\t\t\t\t\t\t_this.addMoveCommand();\r\n\t\t\t\t\t\t_this.addWaitCommand();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfunction disabledMenu(){\r\n\t\t\t\t\t\t_this.addWaitCommand();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfunction postMoveMenu(){\r\n\t\t\t\t\t\tif(hasTarget || hasMapWeapon){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_attack, 'attack');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($gameSystem.getPersuadeOption(_this._actor)){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_persuade, 'persuade');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($statCalc.applyStatModsToValue(_this._actor, 0, [\"heal\"])){\r\n\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_repair, 'heal');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(ENGINE_SETTINGS.ENABLE_TWIN_SYSTEM && !ENGINE_SETTINGS.DISABLE_ALLY_TWINS){\r\n\t\t\t\t\t\t\tif($statCalc.canTwin(_this._actor)){\r\n\t\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_join, 'join');\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_this.addWaitCommand();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfunction deployMenu(){\r\n\t\t\t\t\t\t_this.addMoveCommand();\t\t\t\t\t\r\n\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_spirit, 'spirit');\r\n\t\t\t\t\t\tif($statCalc.canFly(_this._actor) && $statCalc.getCurrentTerrain(_this._actor) != \"space\"){\r\n\t\t\t\t\t\t\tif($statCalc.isFlying(_this._actor)){\r\n\t\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_land, 'land');\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t_this.addCommand(APPSTRINGS.MAPMENU.cmd_fly, 'fly');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($statCalc.getConsumables(_this._actor).length){\r\n\t\t\t\t\t\t\t _this.addCommand(APPSTRINGS.MAPMENU.cmd_item, 'item');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif($gameSystem.isSubBattlePhase() == 'confirm_boarding'){\r\n\t\t\t\t\t\tboardingMenu();\r\n\t\t\t\t\t} else if($gameTemp.isHitAndAway){\r\n\t\t\t\t\t\thitAndAwayMenu();\r\n\t\t\t\t\t} else if($gameTemp.isPostMove){\r\n\t\t\t\t\t\tpostMoveMenu();\r\n\t\t\t\t\t} else if($gameTemp.activeShip){\r\n\t\t\t\t\t\tdeployMenu();\r\n\t\t\t\t\t} else if(this._actor.battleMode() == \"disabled\"){\r\n\t\t\t\t\t\tdisabledMenu();\r\n\t\t\t\t\t} else {\t\r\n\t\t\t\t\t\tregularMenu();\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t_SRPG_Window_ActorCommand_makeCommandList.call(this);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tWindow_ActorCommand.prototype.addEquipCommand = function() {\r\n\t\t\tthis.addCommand(_textSrpgEquip, 'equip', this._actor.canSrpgEquip());\r\n\t\t};\r\n\r\n\t\tWindow_ActorCommand.prototype.addWaitCommand = function() {\r\n\t\t\tthis.addCommand(APPSTRINGS.MAPMENU.cmd_wait, 'wait');\r\n\t\t};\r\n\t\t\r\n\t\tWindow_ActorCommand.prototype.addMoveCommand = function() {\r\n\t\t\tthis.addCommand(APPSTRINGS.MAPMENU.cmd_move, 'move');\r\n\t\t};\r\n\r\n\t\tvar _SRPG_Window_ActorCommand_setup = Window_ActorCommand.prototype.setup;\r\n\t\tWindow_ActorCommand.prototype.setup = function(actor) {\r\n\t\t\tif ($gameSystem.isSRPGMode() == true) {\r\n\t\t\t\tthis._actor = actor;\r\n\t\t\t\tthis.clearCommandList();\r\n\t\t\t\tthis.makeCommandList();\r\n\t\t\t\tthis.updatePlacement();\r\n\t\t\t\tthis.refresh();\r\n\t\t\t\tthis.selectLast();\r\n\t\t\t\tthis.activate();\r\n\t\t\t\tthis.open();\r\n\t\t\t} else {\r\n\t\t\t\t_SRPG_Window_ActorCommand_setup.call(this, actor);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tWindow_ActorCommand.prototype.updatePlacement = function() {\r\n\t\t\tthis.width = this.windowWidth();\r\n\t\t\tthis.height = this.windowHeight();\r\n\t\t\tthis.x = Math.max($gameTemp.activeEvent().screenX() - $gameMap.tileWidth() / 2 - this.windowWidth(), 0);\r\n\t\t\tif ($gameTemp.activeEvent().screenY() < Graphics.boxHeight - 160) {\r\n\t\t\t\tvar eventY = $gameTemp.activeEvent().screenY();\r\n\t\t\t} else {\r\n\t\t\t\tvar eventY = Graphics.boxHeight - 160;\r\n\t\t\t}\r\n\t\t\tthis.y = Math.max(eventY - this.windowHeight(), 0);\r\n\t\t};\r\n\t}\r\n\t\r\n\t//A window that lists the counter/evade/defend options for the player when counter attacking\r\n\tfunction Window_CounterCommand(){\r\n\t\tthis.initialize.apply(this, arguments);\r\n\t}\r\n\r\n\tWindow_CounterCommand.prototype = Object.create(Window_Command.prototype);\r\n\tWindow_CounterCommand.prototype.constructor = Window_CounterCommand;\r\n\r\n\tWindow_CounterCommand.prototype.initialize = function() {\r\n\t\tWindow_Command.prototype.initialize.call(this, 0, 0);\r\n\t\tthis._actor = null;\r\n\t\tthis._item = null;\r\n\t\tthis.openness = 0;\r\n\t\tthis.setup();\r\n\t\tthis.hide();\r\n\t\tthis.deactivate();\r\n\t};\r\n\r\n\tWindow_CounterCommand.prototype.makeCommandList = function() {  \r\n\t\tthis.addCommand(\"Counter\", 'counter');\t\r\n\t\tthis.addCommand(\"Defend\", 'defend');\r\n\t\tthis.addCommand(\"Evade\", 'evade');\r\n\t};\r\n\r\n\tWindow_CounterCommand.prototype.setup = function(actorArray) {\r\n\t\tthis.clearCommandList();\r\n\t\tthis.makeCommandList();\r\n\t\tthis.refresh();\r\n\t\tthis.activate();\r\n\t\tthis.open();\r\n\t};\r\n\r\n\tWindow_CounterCommand.prototype.maxCols = function() {\r\n\t\treturn 1;\r\n\t};\r\n\r\n\tWindow_CounterCommand.prototype.windowHeight = function() {\r\n\t\treturn this.fittingHeight(3);\r\n\t};\r\n\t\r\n\t\r\n\tWindow_Base.prototype.drawSectionRect = function(x, y, w, h, margin, color) {\r\n\t\tvar lineWidth = 1;\r\n\t\tx+=margin;\r\n\t\ty+=margin;\r\n\t\tw-=2*margin;\r\n\t\th-=2*margin;\r\n\t\t//top\r\n\t\tthis.contents.fillRect(x ,y, w, lineWidth, color);\r\n\t\t//bottom\r\n\t\tthis.contents.fillRect(x, y + h, w + lineWidth, lineWidth, color);\r\n\t\t//left\r\n\t\tthis.contents.fillRect(x ,y, lineWidth, h, color);\r\n\t\t//right\r\n\t\tthis.contents.fillRect(x + w, y, lineWidth, h, color);\r\n\t}\r\n\t\r\n\tWindow_Base.prototype.drawRect = function(x, y, w, h, margin, color) {\r\n\t\tx+=margin;\r\n\t\ty+=margin;\r\n\t\tw-=2*margin;\r\n\t\th-=2*margin;\r\n\t\tthis.contents.fillRect(x ,y, w, h, color);\r\n\t}\r\n\t\r\n\tWindow_Base.prototype.windowInnerWidth = function() {\r\n        return this.windowWidth() - 38;\r\n    };\r\n\t\r\n\tWindow_Base.prototype.setFontSize = function(size) {\r\n        this.contents.fontSize = size;\r\n    };\r\n\t\r\n\tWindow_Base.prototype.setItalic = function(state) {\r\n        this.contents.fontItalic = state;\r\n    };\r\n\t\r\n\tWindow_Base.prototype.centerTextOffset = function(text, containerWidth) {\r\n        return containerWidth / 2 - this.textWidth(text) / 2;\r\n    };\r\n\t\r\n\t\r\n\t\r\n\tfunction Window_SRWItemBattle() {\r\n\t\tthis._parent = Window_BattleItem.prototype;\r\n\t\tthis.initialize.apply(this, arguments);\t\r\n    }\r\n\r\n    Window_SRWItemBattle.prototype = Object.create(Window_BattleItem.prototype);\r\n    Window_SRWItemBattle.prototype.constructor = Window_SRWItemBattle;\r\n\t\r\n\tWindow_SRWItemBattle.prototype.maxCols = function(){\r\n\t\treturn 1;\r\n\t}\r\n\t\r\n\tWindow_SRWItemBattle.prototype.windowWidth = function() {\r\n        return 240;\r\n    };\r\n\r\n    Window_SRWItemBattle.prototype.windowHeight = function() {\r\n        return this.fittingHeight(4);\r\n    };\r\n\t\r\n\tWindow_SRWItemBattle.prototype.refresh = function(){\r\n\t\tthis._parent.refresh.call(this);\r\n\t}\r\n\t\r\n\tWindow_SRWItemBattle.prototype.drawItem = function(index) {\r\n\t\tvar item = this._data[index];\r\n\t\tif (item) {\r\n\t\t\titem = $itemEffectManager.getAbilityDisplayInfo(item.itemIdx);\r\n\t\t\tvar numberWidth = 0;//this.numberWidth();\r\n\t\t\tvar rect = this.itemRect(index);\r\n\t\t\t//rect.width -= this.textPadding();\r\n\t\t\tthis.drawItemName(item, rect.x, rect.y, rect.width - numberWidth);\r\n\t\t}\r\n\t};\r\n\t\r\n\tWindow_SRWItemBattle.prototype.drawItemName = function(item, x, y, width) {\r\n\t\twidth = width || 312;\r\n\t\tif (item) {\r\n\t\t\tthis.resetTextColor();\r\n\t\t\tthis.drawText(item.name, x + 10, y, width - 20);\r\n\t\t}\r\n\t};\r\n\t\r\n\tWindow_SRWItemBattle.prototype.makeItemList = function() {\r\n\t\tvar actor = $gameSystem.EventToUnit($gameTemp.activeEvent().eventId())[1];\r\n\t\tthis._data = $statCalc.getConsumables(actor);\r\n\t};\r\n\t\r\n\tWindow_SRWItemBattle.prototype.isEnabled = function(item) {\r\n\t\tvar actor = $gameSystem.EventToUnit($gameTemp.activeEvent().eventId())[1];\r\n\t\tvar itemDef = $itemEffectManager.getAbilityDef(item.itemIdx);\r\n\t\treturn itemDef.isActiveHandler(actor);\r\n\t};\t\r\n\t\r\n\tfunction Window_SRWAbilityCommand() {\r\n\t\tthis._parent = Window_BattleItem.prototype;\r\n\t\tthis.initialize.apply(this, arguments);\t\r\n    }\r\n\r\n    Window_SRWAbilityCommand.prototype = Object.create(Window_BattleItem.prototype);\r\n    Window_SRWAbilityCommand.prototype.constructor = Window_SRWAbilityCommand;\r\n\t\r\n\tWindow_SRWAbilityCommand.prototype.maxCols = function(){\r\n\t\treturn 1;\r\n\t}\r\n\t\r\n\tWindow_SRWAbilityCommand.prototype.windowWidth = function() {\r\n        return 240;\r\n    };\r\n\r\n    Window_SRWAbilityCommand.prototype.windowHeight = function() {\r\n        return this.fittingHeight(4);\r\n    };\r\n\t\r\n\tWindow_SRWAbilityCommand.prototype.refresh = function(){\r\n\t\tthis._parent.refresh.call(this);\r\n\t}\r\n\t\r\n\tWindow_SRWAbilityCommand.prototype.drawItem = function(index) {\r\n\t\tvar item = this._data[index];\r\n\t\tif (item != null) {\r\n\t\t\titem = $abilityCommandManger.getAbilityDisplayInfo(item);\r\n\t\t\tvar numberWidth = 0;//this.numberWidth();\r\n\t\t\tvar rect = this.itemRect(index);\r\n\t\t\t//rect.width -= this.textPadding();\r\n\t\t\tthis.drawItemName(item, rect.x, rect.y, rect.width - numberWidth);\r\n\t\t}\r\n\t};\r\n\t\r\n\tWindow_SRWAbilityCommand.prototype.drawItemName = function(item, x, y, width) {\r\n\t\twidth = width || 312;\r\n\t\tif (item) {\r\n\t\t\tthis.resetTextColor();\r\n\t\t\tthis.drawText(item.name, x + 10, y, width - 20);\r\n\t\t}\r\n\t};\r\n\t\r\n\tWindow_SRWAbilityCommand.prototype.makeItemList = function() {\r\n\t\tvar actor = $gameSystem.EventToUnit($gameTemp.activeEvent().eventId())[1];\r\n\t\tthis._data = $statCalc.getAbilityCommands(actor);\r\n\t};\r\n\t\r\n\tWindow_SRWAbilityCommand.prototype.isEnabled = function(item) {\r\n\t\treturn true;\r\n\t};\t\r\n\t\r\n\tfunction Window_SRWTransformSelection() {\r\n\t\tthis._parent = Window_BattleItem.prototype;\r\n\t\tthis.initialize.apply(this, arguments);\t\r\n    }\r\n\r\n    Window_SRWTransformSelection.prototype = Object.create(Window_BattleItem.prototype);\r\n    Window_SRWTransformSelection.prototype.constructor = Window_SRWTransformSelection;\r\n\t\r\n\tWindow_SRWTransformSelection.prototype.maxCols = function(){\r\n\t\treturn 1;\r\n\t}\r\n\t\r\n\tWindow_SRWTransformSelection.prototype.windowWidth = function() {\r\n        return 240;\r\n    };\r\n\r\n    Window_SRWTransformSelection.prototype.windowHeight = function() {\r\n        return this.fittingHeight(4);\r\n    };\r\n\t\r\n\tWindow_SRWTransformSelection.prototype.refresh = function(){\r\n\t\tthis._parent.refresh.call(this);\r\n\t}\r\n\t\r\n\tWindow_SRWTransformSelection.prototype.drawItem = function(index) {\r\n\t\tvar item = this._data[index];\r\n\t\tif (item != null) {\r\n\t\t\titem = $dataClasses[item];\r\n\t\t\tvar numberWidth = 0;//this.numberWidth();\r\n\t\t\tvar rect = this.itemRect(index);\r\n\t\t\t//rect.width -= this.textPadding();\r\n\t\t\tthis.drawItemName(item, rect.x, rect.y, rect.width - numberWidth);\r\n\t\t}\r\n\t};\r\n\t\r\n\tWindow_SRWTransformSelection.prototype.drawItemName = function(item, x, y, width) {\r\n\t\twidth = width || 312;\r\n\t\tif (item) {\r\n\t\t\tthis.resetTextColor();\r\n\t\t\tthis.drawText(item.name, x + 10, y, width - 20);\r\n\t\t}\r\n\t};\r\n\t\r\n\tWindow_SRWTransformSelection.prototype.makeItemList = function() {\r\n\t\tvar actor = $gameSystem.EventToUnit($gameTemp.activeEvent().eventId())[1];\r\n\t\tthis._data = $statCalc.getTransformationList(actor);\r\n\t};\r\n\t\r\n\tWindow_SRWTransformSelection.prototype.isEnabled = function(item) {\r\n\t\treturn true;\r\n\t};\t\r\n\t\r\n\t\r\n\t\r\n\tfunction Window_StageInfo() {\r\n\t\tthis.initialize.apply(this, arguments);\r\n\t}\r\n\r\n\tWindow_StageInfo.prototype = Object.create(Window_Base.prototype);\r\n\tWindow_StageInfo.prototype.constructor = Window_StageInfo;\r\n\r\n\tWindow_StageInfo.prototype.initialize = function(x, y) {\r\n\t\tvar width = this.windowWidth();\r\n\t\tvar height = this.windowHeight();\r\n\t\tWindow_Base.prototype.initialize.call(this, x, y, width, height);\r\n\t\tthis.refresh();\r\n\t};\r\n\r\n\tWindow_StageInfo.prototype.windowWidth = function() {\r\n\t\treturn 240;\r\n\t};\r\n\r\n\tWindow_StageInfo.prototype.windowHeight = function() {\r\n\t\tif($gameSystem.isSRPGMode()){\r\n\t\t\treturn this.fittingHeight(4);\r\n\t\t} else {\r\n\t\t\treturn this.fittingHeight(1);\r\n\t\t}\t\t\r\n\t};\r\n\r\n\tWindow_StageInfo.prototype.refresh = function() {\r\n\t\tvar lineheight = 35;\r\n\t\tvar columnOffset = 95;\r\n\t\tvar x = 5;\r\n\t\tvar y = 0;\r\n\t\tvar width = this.contents.width - this.textPadding() * 2;\r\n\t\tthis.contents.clear();\r\n\t\tthis.changeTextColor(\"#FFFFFF\");\r\n\t\t//this.drawCurrencyValue(this.value(), this.currencyUnit(), x, 0, width);\r\n\t\tthis.drawText(APPSTRINGS.MAPMENU.label_funds, x, 0, width);\r\n\t\tthis.drawText(this.value(), x + columnOffset , 0, width);\r\n\t\t\r\n\t\tthis.drawText(APPSTRINGS.MAPMENU.label_turn, x,  lineheight, width);\r\n\t\t/*--text-color-highlight: #f9e343;\t\r\n\t \t--text-color-highlight2: #43dbf9;\t*/\r\n\t\tthis.changeTextColor(\"#43dbf9\");\r\n\t\tthis.drawText($gameVariables.value(_turnVarID), x + columnOffset, lineheight, width);\r\n\t\tthis.changeTextColor(\"#FFFFFF\");\r\n\t\tthis.drawText(APPSTRINGS.MAPMENU.label_enemy, x,  lineheight * 2, width);\r\n\t\tthis.changeTextColor(\"#AA2222\");\r\n\t\tthis.drawText($gameVariables.value(_enemiesDestroyed), x + columnOffset,  lineheight * 2, width);\r\n\t\tthis.changeTextColor(\"#FFFFFF\");\r\n\t\tthis.drawText(\"/\", x + columnOffset + 30,  lineheight * 2, width);\r\n\t\tthis.changeTextColor(\"#43dbf9\");\r\n\t\tthis.drawText($gameVariables.value(_enemiesDestroyed) + $gameVariables.value(_existEnemyVarID), x + columnOffset + 45,  lineheight * 2, width);\r\n\t\tthis.changeTextColor(\"#FFFFFF\");\r\n\t\t\r\n\t\tthis.drawText(APPSTRINGS.MAPMENU.label_ally, x,  lineheight * 3, width);\r\n\t\tthis.changeTextColor(\"#AA2222\");\r\n\t\tthis.drawText($gameVariables.value(_actorsDestroyed), x + columnOffset,  lineheight * 3, width);\r\n\t\tthis.changeTextColor(\"#FFFFFF\");\r\n\t\tthis.drawText(\"/\", x + columnOffset + 30,  lineheight * 3, width);\r\n\t\tthis.changeTextColor(\"#43dbf9\");\r\n\t\tthis.drawText($gameVariables.value(_actorsDestroyed) + $gameVariables.value(_existActorVarID), x + columnOffset + 45,  lineheight * 3, width);\r\n\t\tthis.changeTextColor(\"#FFFFFF\");\r\n\t\t\r\n\t};\r\n\r\n\tWindow_StageInfo.prototype.value = function() {\r\n\t\treturn $gameParty.gold();\r\n\t};\r\n\r\n\tWindow_StageInfo.prototype.currencyUnit = function() {\r\n\t\treturn TextManager.currencyUnit;\r\n\t};\r\n\r\n\tWindow_StageInfo.prototype.open = function() {\r\n\t\tthis.refresh();\r\n\t\tWindow_Base.prototype.open.call(this);\r\n\t};\r\n\t\r\n\t\r\n\tfunction Window_ConditionsInfo() {\r\n\t\tthis.initialize.apply(this, arguments);\r\n\t}\r\n\r\n\tWindow_ConditionsInfo.prototype = Object.create(Window_Base.prototype);\r\n\tWindow_ConditionsInfo.prototype.constructor = Window_ConditionsInfo;\r\n\r\n\tWindow_ConditionsInfo.prototype.initialize = function(x, y) {\r\n\t\tvar width = this.windowWidth();\r\n\t\tvar height = this.windowHeight();\r\n\t\tWindow_Base.prototype.initialize.call(this, x, y, width, height);\r\n\t\tthis.refresh();\r\n\t};\r\n\r\n\tWindow_ConditionsInfo.prototype.windowWidth = function() {\r\n\t\treturn 760;\r\n\t};\r\n\r\n\tWindow_ConditionsInfo.prototype.windowHeight = function() {\r\n\t\treturn this.fittingHeight(6);\r\n\t};\r\n\r\n\tWindow_ConditionsInfo.prototype.refresh = function() {\r\n\t\tvar lineheight = 35;\r\n\t\tvar columnOffset = 95;\r\n\t\tvar x = 5;\r\n\t\tvar y = 0;\r\n\t\tvar width = this.contents.width - this.textPadding() * 2;\r\n\t\tthis.contents.clear();\r\n\t\tthis.changeTextColor(\"#FFFFFF\");\r\n\t\t\r\n\t\t\r\n\t\tthis.changeTextColor(\"#43dbf9\");\r\n\t\tthis.drawText(APPSTRINGS.GENERAL.label_victory_condition, x, 0, width);\r\n\t\t\r\n\t\tthis.drawText(APPSTRINGS.GENERAL.label_defeat_condition, x, lineheight * 2, width);\r\n\t\t\r\n\t\tthis.drawText(APPSTRINGS.GENERAL.label_mastery_condition, x, lineheight * 4, width);\r\n\t\t\r\n\t\tthis.changeTextColor(\"#FFFFFF\");\r\n\t\t\r\n\t\tvar valueOffset = 20;\r\n\t\tthis.drawText($gameVariables.value(_victoryConditionText) || \"\", x + valueOffset, lineheight, width - valueOffset);\r\n\t\t\r\n\t\tthis.drawText($gameVariables.value(_defeatConditionText) || \"\", x + valueOffset, lineheight * 3, width - valueOffset);\r\n\t\t\r\n\t\tvar masteryText = $gameVariables.value(_masteryConditionText);\r\n\t\tif($SRWSaveManager.isMapSRPointLocked($gameMap.mapId())){\r\n\t\t\tmasteryText = APPSTRINGS.GENERAL.label_mastery_locked;\r\n\t\t}\r\n\t\tthis.drawText(masteryText || \"\", x + valueOffset, lineheight * 5, width - valueOffset);\r\n\t\t\r\n\t};\r\n\r\n\tWindow_ConditionsInfo.prototype.value = function() {\r\n\t\treturn $gameParty.gold();\r\n\t};\r\n\r\n\tWindow_ConditionsInfo.prototype.currencyUnit = function() {\r\n\t\treturn TextManager.currencyUnit;\r\n\t};\r\n\r\n\tWindow_ConditionsInfo.prototype.open = function() {\r\n\t\tthis.refresh();\r\n\t\tWindow_Base.prototype.open.call(this);\r\n\t};\r\n\t\r\n\t\n\n//# sourceURL=webpack:///./js/SRW_Core/Windows.js?");

/***/ }),

/***/ "./js/SRW Core/main.js":
/*!*****************************!*\
  !*** ./js/SRW Core/main.js ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Windows_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Windows.js */ \"./js/SRW Core/Windows.js\");\n/* harmony import */ var _PluginCommands_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PluginCommands.js */ \"./js/SRW Core/PluginCommands.js\");\nfunction importGlobal(exports){\r\n\tObject.keys(exports).forEach(function(className){\r\n\t\twindow[className] = exports[className];\r\n\t});\r\n}\r\n\r\n\r\n\r\nimportGlobal(_Windows_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\r\n_Windows_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].patches.apply();\r\n\r\n\r\n_PluginCommands_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].patches.apply();\n\n//# sourceURL=webpack:///./js/SRW_Core/main.js?");

/***/ })

/******/ });